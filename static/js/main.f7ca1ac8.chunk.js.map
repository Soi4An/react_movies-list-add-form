{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","TextField","name","value","label","placeholder","required","onChange","hasUrlError","useState","Math","random","toFixed","slice","id","touched","setTouched","hasInputError","htmlFor","type","classNames","event","target","onBlur","pattern","NewMovie","onAdd","count","setCount","setTitle","hasTitleError","setHasTitleError","descrip","setDescrip","setImgUrl","hasImgUrlError","setHasImgUrlError","hasImgUrlLinkErr","setHasImgUrlLinkErr","setImdbUrl","hasImdbUrlError","setHasImdbUrlError","hasImdbUrlLinkErr","setHasImdbUrlLinkErr","setImdbId","hasImdbIdError","setHasImdbIdError","disabled","onSubmit","preventDefault","currentKey","newValue","test","App","moviesFromServer","setMovies","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7ca1ac8.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  hasUrlError?: boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  hasUrlError = false,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasInputError = touched && required && !value;\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasInputError || hasUrlError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasInputError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n      {hasUrlError && (\n        <p className=\"help is-danger\">{`${label} is not link`}</p>\n      )}\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\n// eslint-disable-next-line\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  // Increase the count after successful form submission\n  // to reset touched status of all the `Field`s\n  const [count, setCount] = useState(0);\n\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(true);\n\n  const [descrip, setDescrip] = useState('');\n\n  const [imgUrl, setImgUrl] = useState('');\n  const [hasImgUrlError, setHasImgUrlError] = useState(true);\n  const [hasImgUrlLinkErr, setHasImgUrlLinkErr] = useState(false);\n\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [hasImdbUrlError, setHasImdbUrlError] = useState(true);\n  const [hasImdbUrlLinkErr, setHasImdbUrlLinkErr] = useState(false);\n\n  const [imdbId, setImdbId] = useState('');\n  const [hasImdbIdError, setHasImdbIdError] = useState(true);\n\n  const disabled = hasTitleError || hasImgUrlError || hasImdbUrlError\n    || hasImdbIdError || hasImgUrlLinkErr || hasImdbUrlLinkErr;\n\n  const handleTitle = (newValue: string) => {\n    setTitle(newValue);\n\n    if (newValue) {\n      setHasTitleError(false);\n    } else {\n      setHasTitleError(true);\n    }\n  };\n\n  const handleImgUrl = (newValue: string) => {\n    setImgUrl(newValue);\n\n    if (!newValue) {\n      setHasImgUrlError(true);\n      setHasImgUrlLinkErr(false);\n    } else {\n      setHasImgUrlError(false);\n      if (!pattern.test(newValue)) {\n        setHasImgUrlLinkErr(true);\n      } else {\n        setHasImgUrlLinkErr(false);\n      }\n    }\n  };\n\n  const handleImdbUrl = (newValue: string) => {\n    setImdbUrl(newValue);\n\n    if (!newValue) {\n      setHasImdbUrlError(true);\n      setHasImdbUrlLinkErr(false);\n    } else {\n      setHasImdbUrlError(false);\n      if (!pattern.test(newValue)) {\n        setHasImdbUrlLinkErr(true);\n      } else {\n        setHasImdbUrlLinkErr(false);\n      }\n    }\n  };\n\n  const handleImdbId = (newValue: string) => {\n    setImdbId(newValue);\n\n    if (newValue) {\n      setHasImdbIdError(false);\n    } else {\n      setHasImdbIdError(true);\n    }\n  };\n\n  const reset = () => {\n    setTitle('');\n    setDescrip('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n\n    setHasTitleError(true);\n    setHasImgUrlError(true);\n    setHasImdbUrlError(true);\n    setHasImdbIdError(true);\n\n    setHasImgUrlLinkErr(false);\n    setHasImdbUrlLinkErr(false);\n\n    setCount(currentKey => currentKey + 1);\n  };\n\n  const handleSubmit = (event:React.FormEvent) => {\n    event.preventDefault();\n\n    onAdd({\n      title,\n      description: descrip,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={handleTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={descrip}\n        onChange={value => setDescrip(value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={handleImgUrl}\n        required\n        hasUrlError={hasImgUrlLinkErr}\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={handleImdbUrl}\n        required\n        hasUrlError={hasImdbUrlLinkErr}\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={handleImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={disabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { Movie } from './types/Movie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies(currentMovies => [movie, ...currentMovies]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}